Index: src/test/resources/spring/spring-cache.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/resources/spring/spring-cache.xml	(date 1574881973280)
+++ src/test/resources/spring/spring-cache.xml	(date 1574881973280)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:cache="http://www.springframework.org/schema/cache"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+         http://www.springframework.org/schema/beans/spring-beans.xsd
+         http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
+         http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
+         http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">
+
+    <cache:annotation-driven cache-manager="noOpCacheManager"/>
+
+    <!-- Disabling spring cache -->
+    <bean id="noOpCacheManager" class="org.springframework.cache.support.NoOpCacheManager"/>
+
+
+    <!-- Disabling Hibernate 2-d level cache -->
+    <beans profile="jpa,datajpa">
+        <util:properties id="disableCache">
+            <prop key="entityManagerFactory.jpaPropertyMap['hibernate.cache.use_second_level_cache']">false</prop>
+        </util:properties>
+
+        <context:property-override properties-ref="disableCache"/>
+    </beans>
+
+</beans>
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/repository/JpaUtil.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/JpaUtil.java	(date 1574881960000)
+++ src/main/java/ru/javawebinar/topjava/repository/JpaUtil.java	(date 1574881960000)
@@ -1,22 +0,0 @@
-package ru.javawebinar.topjava.repository;
-
-import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-
-import javax.persistence.EntityManager;
-import javax.persistence.PersistenceContext;
-
-public class JpaUtil {
-
-    @PersistenceContext
-    private EntityManager em;
-
-    public void clear2ndLevelHibernateCache() {
-        Session s = (Session) em.getDelegate();
-        SessionFactory sf = s.getSessionFactory();
-//        sf.evict(User.class);
-//        sf.getCache().evictEntity(User.class, BaseEntity.START_SEQ);
-//        sf.getCache().evictEntityRegion(User.class);
-        sf.getCache().evictAllRegions();
-    }
-}
Index: src/test/java/ru/javawebinar/topjava/service/AbstractJpaUserServiceTest.java
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/AbstractJpaUserServiceTest.java	(date 1574881960000)
+++ src/test/java/ru/javawebinar/topjava/service/AbstractJpaUserServiceTest.java	(date 1574881960000)
@@ -1,34 +0,0 @@
-package ru.javawebinar.topjava.service;
-
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.springframework.beans.factory.annotation.Autowired;
-import ru.javawebinar.topjava.model.Role;
-import ru.javawebinar.topjava.model.User;
-import ru.javawebinar.topjava.repository.JpaUtil;
-
-import javax.validation.ConstraintViolationException;
-import java.util.Date;
-import java.util.Set;
-
-abstract public class AbstractJpaUserServiceTest extends AbstractUserServiceTest {
-
-    @Autowired
-    private JpaUtil jpaUtil;
-
-    @BeforeEach
-    @Override
-    void setUp() throws Exception {
-        super.setUp();
-        jpaUtil.clear2ndLevelHibernateCache();
-    }
-
-    @Test
-    void createWithException() throws Exception {
-        validateRootCause(() -> service.create(new User(null, "  ", "mail@yandex.ru", "password", Role.ROLE_USER)), ConstraintViolationException.class);
-        validateRootCause(() -> service.create(new User(null, "User", "  ", "password", Role.ROLE_USER)), ConstraintViolationException.class);
-        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "  ", Role.ROLE_USER)), ConstraintViolationException.class);
-        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "password", 9, true, new Date(), Set.of())), ConstraintViolationException.class);
-        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "password", 10001, true, new Date(), Set.of())), ConstraintViolationException.class);
-    }
-}
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1574881960000)
+++ pom.xml	(date 1574895056278)
@@ -174,7 +174,7 @@
         <dependency>
             <groupId>org.ehcache</groupId>
             <artifactId>ehcache</artifactId>
-<!--            <scope>runtime</scope>-->
+            <scope>runtime</scope>
             <version>${ehcache.version}</version>
         </dependency>
 
Index: src/test/java/ru/javawebinar/topjava/service/AbstractUserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/AbstractUserServiceTest.java	(date 1574881960000)
+++ src/test/java/ru/javawebinar/topjava/service/AbstractUserServiceTest.java	(date 1574881973256)
@@ -1,15 +1,17 @@
 package ru.javawebinar.topjava.service;
 
-import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Assumptions;
 import org.junit.jupiter.api.Test;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.cache.CacheManager;
 import org.springframework.dao.DataAccessException;
 import ru.javawebinar.topjava.model.Role;
 import ru.javawebinar.topjava.model.User;
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
+import javax.validation.ConstraintViolationException;
+import java.util.Date;
 import java.util.List;
+import java.util.Set;
 
 import static org.junit.jupiter.api.Assertions.assertThrows;
 import static ru.javawebinar.topjava.UserTestData.*;
@@ -19,14 +21,6 @@
     @Autowired
     protected UserService service;
 
-    @Autowired
-    private CacheManager cacheManager;
-
-    @BeforeEach
-    void setUp() throws Exception {
-        cacheManager.getCache("users").clear();
-    }
-
     @Test
     void create() throws Exception {
         User newUser = getNew();
@@ -86,4 +80,14 @@
         List<User> all = service.getAll();
         assertMatch(all, ADMIN, USER);
     }
+
+    @Test
+    void createWithException() throws Exception {
+        Assumptions.assumeTrue(isJpaBased(), "Validation not supported (JPA only)");
+        validateRootCause(() -> service.create(new User(null, "  ", "mail@yandex.ru", "password", Role.ROLE_USER)), ConstraintViolationException.class);
+        validateRootCause(() -> service.create(new User(null, "User", "  ", "password", Role.ROLE_USER)), ConstraintViolationException.class);
+        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "  ", Role.ROLE_USER)), ConstraintViolationException.class);
+        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "password", 9, true, new Date(), Set.of())), ConstraintViolationException.class);
+        validateRootCause(() -> service.create(new User(null, "User", "mail@yandex.ru", "password", 10001, true, new Date(), Set.of())), ConstraintViolationException.class);
+    }
 }
\ No newline at end of file
Index: src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java	(date 1574881960000)
+++ src/test/java/ru/javawebinar/topjava/service/datajpa/DataJpaUserServiceTest.java	(date 1574881973216)
@@ -4,7 +4,7 @@
 import org.springframework.test.context.ActiveProfiles;
 import ru.javawebinar.topjava.MealTestData;
 import ru.javawebinar.topjava.model.User;
-import ru.javawebinar.topjava.service.AbstractJpaUserServiceTest;
+import ru.javawebinar.topjava.service.AbstractUserServiceTest;
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
 import static org.junit.jupiter.api.Assertions.assertThrows;
@@ -12,7 +12,7 @@
 import static ru.javawebinar.topjava.UserTestData.*;
 
 @ActiveProfiles(DATAJPA)
-class DataJpaUserServiceTest extends AbstractJpaUserServiceTest {
+class DataJpaUserServiceTest extends AbstractUserServiceTest {
     @Test
     void getWithMeals() throws Exception {
         User admin = service.getWithMeals(ADMIN_ID);
Index: src/test/java/ru/javawebinar/topjava/service/jpa/JpaUserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/jpa/JpaUserServiceTest.java	(date 1574881960000)
+++ src/test/java/ru/javawebinar/topjava/service/jpa/JpaUserServiceTest.java	(date 1574881973221)
@@ -1,10 +1,10 @@
 package ru.javawebinar.topjava.service.jpa;
 
 import org.springframework.test.context.ActiveProfiles;
-import ru.javawebinar.topjava.service.AbstractJpaUserServiceTest;
+import ru.javawebinar.topjava.service.AbstractUserServiceTest;
 
 import static ru.javawebinar.topjava.Profiles.JPA;
 
 @ActiveProfiles(JPA)
-class JpaUserServiceTest extends AbstractJpaUserServiceTest {
+class JpaUserServiceTest extends AbstractUserServiceTest {
 }
\ No newline at end of file
Index: src/test/java/ru/javawebinar/topjava/web/AbstractControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/web/AbstractControllerTest.java	(date 1574881960000)
+++ src/test/java/ru/javawebinar/topjava/web/AbstractControllerTest.java	(date 1574882531340)
@@ -1,8 +1,6 @@
 package ru.javawebinar.topjava.web;
 
-import org.junit.jupiter.api.BeforeEach;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.cache.CacheManager;
 import org.springframework.test.context.ActiveProfiles;
 import org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig;
 import org.springframework.test.web.servlet.MockMvc;
@@ -11,7 +9,6 @@
 import org.springframework.web.context.WebApplicationContext;
 import org.springframework.web.filter.CharacterEncodingFilter;
 import ru.javawebinar.topjava.AllActiveProfileResolver;
-import ru.javawebinar.topjava.repository.JpaUtil;
 
 import javax.annotation.PostConstruct;
 
@@ -35,12 +32,6 @@
 
     protected MockMvc mockMvc;
 
-    @Autowired
-    private CacheManager cacheManager;
-
-    @Autowired(required = false)
-    private JpaUtil jpaUtil;
-
     @Autowired
     private WebApplicationContext webApplicationContext;
 
@@ -51,12 +42,4 @@
                 .addFilter(CHARACTER_ENCODING_FILTER)
                 .build();
     }
-
-    @BeforeEach
-    void setUp() {
-        cacheManager.getCache("users").clear();
-        if (jpaUtil != null) {
-            jpaUtil.clear2ndLevelHibernateCache();
-        }
-    }
 }
Index: src/main/resources/spring/spring-db.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/spring/spring-db.xml	(date 1574881960000)
+++ src/main/resources/spring/spring-db.xml	(date 1574882863635)
@@ -111,8 +111,6 @@
         <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
         <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
               p:entityManagerFactory-ref="entityManagerFactory"/>
-
-        <bean class="ru.javawebinar.topjava.repository.JpaUtil"/>
     </beans>
 
     <beans profile="jpa">
